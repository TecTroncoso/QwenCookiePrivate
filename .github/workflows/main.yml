# .github/workflows/main.yml (Versión Optimizada para Koyeb)
name: Weekly Qwen Cookie Refresh & Update Koyeb
on:
  schedule:
    - cron: "0 3 * * 0" # Todos los domingos a las 3:00 AM UTC (corregido)
  workflow_dispatch: # Permite ejecución manual
jobs:
  refresh-and-update:
    name: Refresh Cookie and Update Koyeb Secret
    runs-on: ubuntu-latest
    environment: Qwen
    env:
      KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
      KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies and Tools
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update && sudo apt-get install -y xvfb jq curl
          pip install -r requirements.txt

      - name: Run Selenium Script to Get Cookies
        id: get-cookies
        run: |
          echo "🔄 Ejecutando script de Selenium para obtener cookies..."
          xvfb-run -a python main.py
          
          if [ ! -f cookies.json ]; then
            echo "::error::El archivo 'cookies.json' no fue creado."
            exit 1
          fi
          
          # Verificar que el archivo no esté vacío
          if [ ! -s cookies.json ]; then
            echo "::error::El archivo 'cookies.json' está vacío."
            exit 1
          fi
          
          echo "✅ Archivo 'cookies.json' generado correctamente."
          echo "📄 Contenido del archivo (primeras líneas):"
          head -n 3 cookies.json

      - name: Setup Koyeb CLI
        run: |
          echo "📥 Descargando Koyeb CLI v5.7.0..."
          curl -sL "https://github.com/koyeb/koyeb-cli/releases/download/v5.7.0/koyeb-cli_5.7.0_linux_amd64.tar.gz" -o koyeb-cli.tar.gz
          
          echo "📦 Extrayendo CLI..."
          tar -xzf koyeb-cli.tar.gz
          
          echo "⚙️ Instalando CLI..."
          sudo mv koyeb /usr/local/bin/koyeb
          sudo chmod +x /usr/local/bin/koyeb
          
          echo "✅ Verificando instalación..."
          koyeb version

      - name: Update Secret on Koyeb and Trigger Redeployment
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
        run: |
          echo "🔄 Codificando cookies a Base64..."
          B64_COOKIES=$(base64 -w 0 cookies.json)
          
          if [ -z "$B64_COOKIES" ]; then
            echo "::error::No se pudieron codificar las cookies."
            exit 1
          fi
          
          echo "✅ Cookies codificadas (longitud: ${#B64_COOKIES} caracteres)"
        
          echo "🔍 Listando todas las apps disponibles..."
          koyeb app list
          
          echo "🔍 Buscando servicios en la app '$KOYEB_APP_NAME'..."
          
          # Intentar diferentes sintaxis para el comando service list
          echo "Intentando: koyeb service list --app $KOYEB_APP_NAME"
          SERVICES_JSON=$(koyeb service list --app "$KOYEB_APP_NAME" -o json 2>&1)
          SERVICE_LIST_EXIT_CODE=$?
          
          if [ $SERVICE_LIST_EXIT_CODE -ne 0 ]; then
            echo "❌ Falló con --app flag. Error: $SERVICES_JSON"
            echo "Intentando: koyeb service list (sin filtro de app)"
            SERVICES_JSON=$(koyeb service list -o json 2>&1)
            SERVICE_LIST_EXIT_CODE=$?
          fi
          
          if [ $SERVICE_LIST_EXIT_CODE -ne 0 ]; then
            echo "❌ Falló service list. Error: $SERVICES_JSON"
            echo "Mostrando ayuda del comando:"
            koyeb service --help
            exit 1
          fi
          
          echo "✅ Servicios obtenidos: $SERVICES_JSON"
          
          # Filtrar por app name si obtuvimos todos los servicios
          if echo "$SERVICES_JSON" | jq -e '.[] | select(.app_name == "'$KOYEB_APP_NAME'")' >/dev/null 2>&1; then
            SERVICE_ID=$(echo "$SERVICES_JSON" | jq -r '.[] | select(.app_name == "'$KOYEB_APP_NAME'") | .id' | head -n1)
            SERVICE_NAME=$(echo "$SERVICES_JSON" | jq -r '.[] | select(.app_name == "'$KOYEB_APP_NAME'") | .name' | head -n1)
          else
            # Si no hay campo app_name, tomar el primer servicio
            SERVICE_ID=$(echo "$SERVICES_JSON" | jq -r '.[0].id')
            SERVICE_NAME=$(echo "$SERVICES_JSON" | jq -r '.[0].name')
          fi
        
          if [ -z "$SERVICE_ID" ] || [ "$SERVICE_ID" = "null" ]; then
            echo "::error::No se pudo obtener el ID del servicio."
            echo "JSON de servicios: $SERVICES_JSON"
            exit 1
          fi
          
          echo "✅ Servicio encontrado: $SERVICE_NAME (ID: $SERVICE_ID)"
        
          echo "🔄 Actualizando el secreto 'QWEN_COOKIES_JSON_B64'..."
          
          # Verificar si el secreto existe antes de actualizarlo
          if koyeb secret show QWEN_COOKIES_JSON_B64 >/dev/null 2>&1; then
            echo "📝 Actualizando secreto existente..."
            koyeb secret update QWEN_COOKIES_JSON_B64 --value "$B64_COOKIES"
          else
            echo "📝 Creando nuevo secreto..."
            koyeb secret create QWEN_COOKIES_JSON_B64 --value "$B64_COOKIES"
          fi
        
          echo "✅ Secreto actualizado correctamente."
          
          echo "🚀 Iniciando redespliegue del servicio..."
          koyeb service redeploy "$SERVICE_ID"
          
          echo "✅ Redespliegue iniciado en Koyeb."
          echo "🎯 Proceso completado exitosamente!"

      - name: Cleanup
        if: always()
        run: |
          echo "🧹 Limpiando archivos temporales..."
          rm -f cookies.json koyeb-cli.tar.gz
          echo "✅ Cleanup completado."
