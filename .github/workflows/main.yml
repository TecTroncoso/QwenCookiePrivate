# .github/workflows/main.yml (Versi√≥n Adaptada para Render)
name: Weekly Qwen Cookie Refresh & Update Render
on:
  schedule:
    - cron: "0 3 * * 0" # Todos los domingos a las 3:00 AM UTC
  workflow_dispatch: # Permite ejecuci√≥n manual
jobs:
  refresh-and-update:
    name: Refresh Cookie and Update Render Env Var
    runs-on: ubuntu-latest
    environment: Qwen
    # No necesitas 'environment' a menos que lo uses para protecci√≥n de secrets
    env:
      # Secretos necesarios para el script y la API de Render
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies and Tools
        run: |
          python -m pip install --upgrade pip
          # jq es esencial para procesar la respuesta JSON de la API de Render
          sudo apt-get update && sudo apt-get install -y xvfb jq curl
          pip install -r requirements.txt

      - name: Run Selenium Script to Get Cookies
        id: get-cookies
        run: |
          echo "üîÑ Ejecutando script de Selenium para obtener cookies..."
          xvfb-run -a python main.py
          
          if [ ! -s cookies.json ]; then
            echo "::error::El archivo 'cookies.json' no fue creado o est√° vac√≠o."
            exit 1
          fi
          
          echo "‚úÖ Archivo 'cookies.json' generado correctamente."
          echo "üìÑ Contenido del archivo (primeras l√≠neas):"
          head -n 3 cookies.json

      - name: Update Env Var on Render and Trigger Redeployment
        run: |
          echo "üîÑ Codificando cookies a Base64..."
          B64_COOKIES=$(base64 -w 0 cookies.json)
          if [ -z "$B64_COOKIES" ]; then
            echo "::error::No se pudieron codificar las cookies."
            exit 1
          fi
          echo "‚úÖ Cookies codificadas (longitud: ${#B64_COOKIES} caracteres)"
        
          # --- VERSI√ìN MEJORADA CON MANEJO DE ERRORES ---
          echo "üîç Buscando el ID de la variable de entorno 'QWEN_COOKIES_JSON_B64' en Render..."
          
          # Guardamos la respuesta y el c√≥digo de estado HTTP por separado
          HTTP_STATUS=$(curl -s -w "%{http_code}" -o response.json \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/env-vars")

          # Verificamos si la llamada a la API fue exitosa (c√≥digo 200)
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "::error::Fall√≥ la llamada a la API de Render (C√≥digo de estado: $HTTP_STATUS)."
            echo "Respuesta de la API:"
            cat response.json
            echo "Verifica que RENDER_SERVICE_ID y RENDER_API_KEY sean correctos en los secretos de GitHub."
            exit 1
          fi

          # Si la llamada fue exitosa, ahora s√≠ procesamos el JSON
          ENV_VAR_ID=$(cat response.json | jq -r '.[] | select(.key == "QWEN_COOKIES_JSON_B64") | .id')

          if [ -z "$ENV_VAR_ID" ] || [ "$ENV_VAR_ID" = "null" ]; then
            echo "::error::La llamada a la API fue exitosa, pero no se encontr√≥ la variable 'QWEN_COOKIES_JSON_B64'."
            echo "Aseg√∫rate de que la variable exista en el entorno de tu servicio de Render."
            exit 1
          fi
          
          echo "‚úÖ ID de la variable de entorno encontrado: $ENV_VAR_ID"

          # El resto del script para actualizar y redesplegar...
          echo "üîÑ Actualizando la variable de entorno en Render..."
          curl --fail -X PUT "https://api.render.com/v1/services/$RENDER_SERVICE_ID/env-vars/$ENV_VAR_ID" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d "{\"value\": \"$B64_COOKIES\"}"

          echo "‚úÖ Variable de entorno actualizada correctamente."
          
          echo "üöÄ Iniciando redespliegue del servicio en Render..."
          curl --fail -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d '{"clearCache": "no"}'
            
          echo "‚úÖ Redespliegue iniciado en Render."
          echo "üéØ Proceso completado exitosamente!"

      - name: Cleanup
        if: always()
        run: |
          echo "üßπ Limpiando archivos temporales..."
          rm -f cookies.json
          echo "‚úÖ Cleanup completado."
